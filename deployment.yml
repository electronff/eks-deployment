---
# # apiVersion: v1
# # kind: Namespace
# # metadata:
# #   name: python-web

# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: python-web
#   namespace: python-web
#   labels:
#     app: python-web
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: python-web
#   strategy: {}
#   template:
#     metadata:
#       labels:
#         app: python-web
#     spec:
#       containers:
#       - name: python-web
#         image: 998252513391.dkr.ecr.us-east-1.amazonaws.com/webapp:$IMAGE_TAG
#         ports:
#           - containerPort: 8080
#         resources: {}

# ---
# kind: Service
# apiVersion: v1
# metadata:
#   name: python-web
#   namespace: python-web
# spec:
#   selector:
#     app: python-web
#   type: NodePort
#   ports:
#   - protocol: TCP
#     port: 80
#     targetPort: 8080

# # ---

# # apiVersion: networking.k8s.io/v1 Ingress
# # kind: Ingress
# # metadata:
# #   name: python-web
# #   namespace: python-web
# #   annotations:
# #     kubernetes.io/ingress.class: alb
# #     alb.ingress.kubernetes.io/target-type: ip
# #     alb.ingress.kubernetes.io/scheme: internet-facing
# # spec:
# #   rules:
# #     - http:
# #         paths:
# #           - path: /
# #             backend:
# #               serviceName: python-web
# #               servicePort: 80







apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: pythonweb
spec:
  selector:
    matchLabels:
      app: pythonweb
  replicas: 2 # tells deployment to run 2 pods matching the template
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1

  template:
    metadata:
      labels:
        app: pythonweb
    spec:
      containers:
      - name: pythonweb
        image: 998252513391.dkr.ecr.us-east-1.amazonaws.com/webapp:0.1.1.88
        #image: muritala/pythonapp        
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: pythonweb-svc
  labels:
    app: pythonweb
spec:
  selector:
    app: pythonweb
  type: LoadBalancer
  ports:
    - port: 5000
      targetPort: 5000
      nodePort: 31200


  